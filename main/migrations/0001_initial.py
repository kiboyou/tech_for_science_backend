# Generated by Django 5.1.2 on 2025-09-16 10:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Atelier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=220, unique=True, verbose_name="Slug"
                    ),
                ),
                ("summary", models.TextField(blank=True, verbose_name="Résumé")),
                ("content", models.TextField(blank=True, verbose_name="Contenu")),
                (
                    "cover_image",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Image de couverture (Cloudinary)",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Vidéo (Cloudinary)",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de début"
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de fin"
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=200, verbose_name="Lieu"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="Publié"),
                ),
                (
                    "is_promoted",
                    models.BooleanField(default=False, verbose_name="Mis en avant"),
                ),
            ],
            options={
                "ordering": ["-start_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=220, unique=True, verbose_name="Slug"
                    ),
                ),
                ("excerpt", models.TextField(blank=True, verbose_name="Extrait")),
                ("content", models.TextField(blank=True, verbose_name="Contenu")),
                (
                    "cover_image",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Image de couverture (Cloudinary)",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Vidéo (Cloudinary)",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de publication"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="Publié"),
                ),
            ],
            options={
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150, verbose_name="Nom & Prénom")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Téléphone"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("question", "Question générale"),
                            ("partenariat", "Partenariat"),
                            ("inscription", "Inscription"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Sujet",
                    ),
                ),
                ("message", models.TextField(verbose_name="Message")),
            ],
            options={
                "verbose_name": "Message de contact",
                "verbose_name_plural": "Messages de contact",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EstablishmentRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "establishment_name",
                    models.CharField(
                        max_length=200, verbose_name="Nom de l’établissement"
                    ),
                ),
                (
                    "responsible_name",
                    models.CharField(
                        max_length=150, verbose_name="Nom & Prénom du responsable"
                    ),
                ),
                ("role", models.CharField(max_length=150, verbose_name="Fonction")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("phone", models.CharField(max_length=50, verbose_name="Téléphone")),
                (
                    "partnership_types",
                    models.CharField(
                        help_text="Ateliers,Conférences,Expositions,Formation,Autre",
                        max_length=200,
                        verbose_name="Type de partenariat souhaité (CSV)",
                    ),
                ),
                (
                    "participants",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre estimé de participants",
                    ),
                ),
                (
                    "details",
                    models.TextField(
                        blank=True, verbose_name="Message / Détails de la demande"
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande d’établissement",
                "verbose_name_plural": "Demandes d’établissements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Info",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=220, unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "info_type",
                    models.CharField(
                        choices=[
                            ("concours", "Concours"),
                            ("bourse", "Bourses"),
                            ("challenge", "Challenges"),
                        ],
                        max_length=20,
                        verbose_name="Type",
                    ),
                ),
                ("excerpt", models.TextField(blank=True, verbose_name="Résumé")),
                (
                    "content",
                    models.TextField(blank=True, verbose_name="Contenu / Détails"),
                ),
                (
                    "procedure",
                    models.TextField(blank=True, verbose_name="Procédure / Étapes"),
                ),
                (
                    "link_url",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Lien externe",
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date limite"
                    ),
                ),
                (
                    "cover_image",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Image de couverture (Cloudinary)",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="Publié"),
                ),
                (
                    "is_promoted",
                    models.BooleanField(default=False, verbose_name="Mis en avant"),
                ),
                (
                    "promote_start",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Début de promotion"
                    ),
                ),
                (
                    "promote_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fin de promotion"
                    ),
                ),
            ],
            options={
                "verbose_name": "Information (concours/bourse/challenge)",
                "verbose_name_plural": "Informations",
                "ordering": ["-deadline", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SponsorApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "org_name",
                    models.CharField(
                        max_length=200, verbose_name="Organisation / Entreprise"
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        max_length=150, verbose_name="Nom & Prénom du soumettant"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="Fonction"
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("phone", models.CharField(max_length=50, verbose_name="Téléphone")),
                (
                    "support_types",
                    models.CharField(
                        help_text="Institutionnel,Financier,Matériel,Logistique,Bourses,Autre",
                        max_length=200,
                        verbose_name="Type de soutien (CSV)",
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, verbose_name="Message complémentaire"),
                ),
            ],
            options={
                "verbose_name": "Demande sponsor",
                "verbose_name_plural": "Demandes sponsors",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150, verbose_name="Nom")),
                (
                    "role",
                    models.CharField(blank=True, max_length=150, verbose_name="Rôle"),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Bio")),
                (
                    "photo",
                    models.URLField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Photo (Cloudinary)",
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordre")),
                ("active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="À la une"),
                ),
            ],
            options={
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="VolunteerApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=150, verbose_name="Nom & Prénom")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("phone", models.CharField(max_length=50, verbose_name="Téléphone")),
                (
                    "city",
                    models.CharField(
                        max_length=120, verbose_name="Ville / Localisation"
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        choices=[
                            ("science", "Science"),
                            ("animation3d", "Animation 3D"),
                            ("logistique", "Logistique"),
                            ("communication", "Communication"),
                            ("administration", "Administration"),
                            ("autre", "Autre"),
                        ],
                        max_length=30,
                        verbose_name="Domaine de compétences",
                    ),
                ),
                (
                    "domain_other",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Autre (à préciser)"
                    ),
                ),
                (
                    "availability",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Semaine,Week-end,Vacances scolaires",
                        max_length=200,
                        verbose_name="Disponibilités (CSV)",
                    ),
                ),
                (
                    "motivation",
                    models.TextField(
                        blank=True,
                        verbose_name="Pourquoi souhaitez-vous devenir bénévole ?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Candidature bénévole",
                "verbose_name_plural": "Candidatures bénévoles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AtelierImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image_url",
                    models.URLField(max_length=500, verbose_name="Image (Cloudinary)"),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Légende"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordre")),
                (
                    "atelier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="main.atelier",
                        verbose_name="Atelier",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
        migrations.CreateModel(
            name="BlogImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image_url",
                    models.URLField(max_length=500, verbose_name="Image (Cloudinary)"),
                ),
                (
                    "caption",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Légende"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordre")),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="main.blogpost",
                        verbose_name="Article de blog",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "id"],
            },
        ),
    ]
